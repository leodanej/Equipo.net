// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using modelos;

namespace bakend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210619074702_19junio")]
    partial class _19junio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("modelos.ent_sal", b =>
                {
                    b.Property<int>("EntSalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("datetime2");

                    b.Property<int>("GLId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime2");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasKey("EntSalId");

                    b.ToTable("EntradasSalidas");
                });

            modelBuilder.Entity("modelos.geolug", b =>
                {
                    b.Property<int>("GLId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LugId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasKey("GLId");

                    b.ToTable("geolugares");
                });

            modelBuilder.Entity("modelos.lugar", b =>
                {
                    b.Property<int>("LugarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("latitud")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("longitud")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LugarId");

                    b.ToTable("Lugar");
                });

            modelBuilder.Entity("modelos.movimiento", b =>
                {
                    b.Property<int>("MovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecursoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasKey("MovId");

                    b.HasIndex("RecursoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Usu_Rec");
                });

            modelBuilder.Entity("modelos.posicion", b =>
                {
                    b.Property<int>("PosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecursoId")
                        .HasColumnType("int");

                    b.Property<decimal>("latitud")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("longitud")
                        .HasColumnType("decimal(9,6)");

                    b.HasKey("PosId");

                    b.ToTable("posiciones");
                });

            modelBuilder.Entity("modelos.punto", b =>
                {
                    b.Property<int>("PuntoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GLId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<decimal>("latitud")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("longitud")
                        .HasColumnType("decimal(9,6)");

                    b.HasKey("PuntoId");

                    b.HasIndex("GLId");

                    b.ToTable("puntos");
                });

            modelBuilder.Entity("modelos.recurso", b =>
                {
                    b.Property<int>("RecursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecursoId");

                    b.ToTable("Recurso");
                });

            modelBuilder.Entity("modelos.usuario", b =>
                {
                    b.Property<int?>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Usuarioid");

                    b.HasIndex("correo")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("modelos.movimiento", b =>
                {
                    b.HasOne("modelos.recurso", "Recurso")
                        .WithMany("movimientos")
                        .HasForeignKey("RecursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("modelos.usuario", "Usuario")
                        .WithMany("movimientos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recurso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("modelos.recurso", b =>
                {
                    b.Navigation("movimientos");
                });

            modelBuilder.Entity("modelos.usuario", b =>
                {
                    b.Navigation("movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
